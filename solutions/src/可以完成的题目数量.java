/**
 * @author : dx
 * @date : 2018/11/22
 * Description :
 */
public class 可以完成的题目数量 {
    /**
     * 描述
     * 给定一个正整数n，表示一场比赛的时间，比赛中题目的难度是递增的，你每完成一个题目，就要花费k × i的时间，其中k是输入的一个系数，i表示题目的序号(从1开始)。根据这些信息，返回这场比赛中，你最多能完成几个题目。
     * <p>
     * 1<=n<=2^61-1 1<=k<=50
     * <p>
     * 您在真实的面试中是否遇到过这个题？
     * 样例
     * 给定 n = 30 和 k = 1,返回 7
     * <p>
     * 解释:
     * 因为 `1 * 1 + 1 * 2 + 1 * 3 + 1 * 4 + 1 * 5 + 1 * 6 + 1 * 7 = 28 < 30`
     * 且 　`1 * 1 + 1 * 2 + 1 * 3 + 1 * 4 + 1 * 5 + 1 * 6 + 1 * 7 + 1 * 8 = 36 > 30`
     * <p>
     * 高中知识，等差公式的求解。
     */
    public long canAccept(long n, int k) {
        // Write your code here

        return (long) (Math.sqrt(2 * n / k + 0.25) - 0.5);
    }
}
